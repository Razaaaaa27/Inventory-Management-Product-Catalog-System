<!-- Dashboard Header -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h2">Admin Dashboard</h1>
    <div>
        <a href="/admin/products/new" class="btn btn-primary me-2">
            <i class="fas fa-plus"></i> Add Product
        </a>
        <a href="/admin/categories/new" class="btn btn-secondary">
            <i class="fas fa-plus"></i> Add Category
        </a>
    </div>
</div>

<!-- Alert Messages -->
<div id="alertContainer"></div>

<!-- Stats Cards -->
<div class="row mb-4">
    <!-- Total Products -->
    <div class="col-md-4">
        <div class="card">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h6 class="card-subtitle text-muted">Total Products</h6>
                        <h2 class="card-title mb-0"><%= stats.totalProducts %></h2>
                    </div>
                    <div class="text-primary">
                        <i class="fas fa-box fa-2x"></i>
                    </div>
                </div>
                <a href="/admin/products" class="btn btn-link px-0">View all products</a>
            </div>
        </div>
    </div>

    <!-- Categories -->
    <div class="col-md-4">
        <div class="card">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h6 class="card-subtitle text-muted">Categories</h6>
                        <h2 class="card-title mb-0"><%= stats.totalCategories %></h2>
                    </div>
                    <div class="text-success">
                        <i class="fas fa-tags fa-2x"></i>
                    </div>
                </div>
                <a href="/admin/categories" class="btn btn-link px-0">Manage categories</a>
            </div>
        </div>
    </div>

    <!-- Low Stock Items -->
    <div class="col-md-4">
        <div class="card">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h6 class="card-subtitle text-muted">Low Stock Items</h6>
                        <h2 class="card-title mb-0"><%= stats.lowStockItems %></h2>
                    </div>
                    <div class="text-warning">
                        <i class="fas fa-exclamation-triangle fa-2x"></i>
                    </div>
                </div>
                <a href="/admin/products?filter=low-stock" class="btn btn-link px-0">View low stock items</a>
            </div>
        </div>
    </div>
</div>

<!-- Recent Products -->
<div class="card mb-4">
    <div class="card-header">
        <h5 class="card-title mb-0">Recent Products</h5>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Category</th>
                        <th>Price</th>
                        <th>Stock</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (recentProducts && recentProducts.length > 0) { %>
                        <% recentProducts.forEach(function(product) { %>
                        <tr>
                            <td>
                                <div class="d-flex align-items-center">
                                    <% if (product.image) { %>
                                    <img src="<%= product.image %>" alt="<%= product.name %>" class="me-2" style="width: 32px; height: 32px; object-fit: cover;">
                                    <% } %>
                                    <%= product.name %>
                                </div>
                            </td>
                            <td><%= product.category ? product.category.name : 'Uncategorized' %></td>
                            <td>$<%= product.price.toFixed(2) %></td>
                            <td>
                                <% if (product.stock <= 5) { %>
                                <span class="badge bg-warning"><%= product.stock %></span>
                                <% } else { %>
                                <%= product.stock %>
                                <% } %>
                            </td>
                            <td>
                                <div class="btn-group">
                                    <a href="/admin/products/<%= product._id %>/edit" class="btn btn-sm btn-outline-primary me-1">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <button type="button" class="btn btn-sm btn-outline-danger delete-product" data-product-id="<%= product._id %>">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                        <% }); %>
                    <% } else { %>
                        <tr>
                            <td colspan="5" class="text-center py-4">
                                <p class="text-muted mb-0">No products found</p>
                                <a href="/admin/products/new" class="btn btn-primary mt-3">
                                    <i class="fas fa-plus"></i> Add First Product
                                </a>
                            </td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Delete Product Modal -->
<div class="modal fade" id="deleteProductModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this product?</p>
                <p class="text-danger mb-0"><small>This action cannot be undone.</small></p>
                <div id="deleteErrorMessage" class="alert alert-danger mt-3" style="display: none;"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- Required Scripts -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<!-- Initialize delete functionality -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Initialize Bootstrap modal
    const deleteModal = new bootstrap.Modal(document.getElementById('deleteProductModal'));
    const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
    const errorMessageDiv = document.getElementById('deleteErrorMessage');
    let productToDelete = null;

    // Helper function to show messages
    function showMessage(message, type = 'success') {
        const alertDiv = document.createElement('div');
        alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
        alertDiv.innerHTML = `
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        `;
        
        const container = document.getElementById('alertContainer');
        container.innerHTML = '';
        container.appendChild(alertDiv);

        // Auto dismiss after 3 seconds
        setTimeout(() => {
            alertDiv.remove();
        }, 3000);
    }

    // Add click handlers using event delegation
    document.addEventListener('click', function(event) {
        const deleteButton = event.target.closest('.delete-product');
        if (deleteButton) {
            event.preventDefault();
            event.stopPropagation();
            productToDelete = deleteButton.getAttribute('data-product-id');
            errorMessageDiv.style.display = 'none';
            deleteModal.show();
        }
    });

    // Handle delete confirmation
    confirmDeleteBtn.addEventListener('click', async function() {
        if (!productToDelete) return;

        try {
            const response = await fetch(`/admin/products/${productToDelete}?_method=DELETE`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                credentials: 'same-origin'
            });

            let data;
            const contentType = response.headers.get('content-type');
            if (contentType && contentType.includes('application/json')) {
                data = await response.json();
            } else {
                throw new Error('Received non-JSON response from server');
            }

            if (response.ok) {
                // Remove the product row from the table
                const productRow = document.querySelector(`button[data-product-id="${productToDelete}"]`).closest('tr');
                if (productRow) {
                    productRow.remove();
                }

                // Hide the modal
                deleteModal.hide();

                // Show success message
                showMessage('Product deleted successfully');

                // Check if we need to reload for empty state
                const remainingProducts = document.querySelectorAll('tbody tr').length;
                if (remainingProducts === 0) {
                    window.location.reload();
                }

                // Update stats
                const totalProductsElement = document.querySelector('.card-title:contains("Total Products")');
                if (totalProductsElement) {
                    const currentTotal = parseInt(totalProductsElement.textContent);
                    totalProductsElement.textContent = (currentTotal - 1).toString();
                }
            } else {
                errorMessageDiv.textContent = data.message || 'Failed to delete product';
                errorMessageDiv.style.display = 'block';
            }
        } catch (error) {
            console.error('Delete error:', error);
            errorMessageDiv.textContent = 'Error deleting product: ' + error.message;
            errorMessageDiv.style.display = 'block';
        }
    });
});
</script> 